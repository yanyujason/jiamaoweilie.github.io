<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Css | My Octopress Blog]]></title>
  <link href="http://jiamaoweilie.github.io/blog/categories/css/atom.xml" rel="self"/>
  <link href="http://jiamaoweilie.github.io/"/>
  <updated>2017-03-07T22:31:52+08:00</updated>
  <id>http://jiamaoweilie.github.io/</id>
  <author>
    <name><![CDATA[Your Name]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[伪元素的使用]]></title>
    <link href="http://jiamaoweilie.github.io/blog/2014/11/26/before-and-after/"/>
    <updated>2014-11-26T21:29:58+08:00</updated>
    <id>http://jiamaoweilie.github.io/blog/2014/11/26/before-and-after</id>
    <content type="html"><![CDATA[<p>之前在学习CSS VOCABULARY的时候看到过有关伪元素的知识，知道它可以方便开发，但是具体用途和用法并没有真正掌握。最近有机会再次接触，对其用途有了一些新认识。</p>

<h2>完美的画个衬线</h2>

<p>在写页面的时候经常会遇到下图所示的情况，需要在一个标题或一段文字的下方显示一条定长的衬线。</p>

<p><img src="/images/img_for_before_after/how-it-works.png" alt="" /></p>

<p>我们可以通过给该元素的下面加另一个元素，然后设置一些样式来实现这种效果。但是如果使用伪元素就可以在不添加任何额外元素的情况下方便的画出这条衬线。</p>

<p>假设，有这样一个标题需要设置上图所示的样式：</p>

<p>```css</p>

<h2 class="title">HOW IT WORKS</h2>


<p>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>我们来看看如何使用伪元素来为该标题设置样式：&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;h2{
</span><span class='line'>    text-align: center;
</span><span class='line'>    color: $gray-black-color;
</span><span class='line'>    position: relative;
</span><span class='line'>
</span><span class='line'>    &amp;::after {
</span><span class='line'>    content: "";
</span><span class='line'>    position: absolute;
</span><span class='line'>    top: 35px;
</span><span class='line'>    left: 50%;
</span><span class='line'>    width: 50px;
</span><span class='line'>    height: 3px;
</span><span class='line'>    background-color: rgba(39, 39, 43, 0.1);
</span><span class='line'>    margin: 0 0 0 -23px;
</span><span class='line'>  }
</span><span class='line'>}
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;可以看到，我们将元素本身的&lt;code&gt;position&lt;/code&gt;设为&lt;code&gt;relative&lt;/code&gt;，然后将其伪元素after的&lt;code&gt;positon&lt;/code&gt;设为&lt;code&gt;absolute&lt;/code&gt;，这样after的位置就相对于其父元素是绝对位置，我们可以通过设置它的&lt;code&gt;top&lt;/code&gt;，&lt;code&gt;left&lt;/code&gt;，或者&lt;code&gt;right&lt;/code&gt;属性来调整它的位置。上面代码中设定该元素的&lt;code&gt;width&lt;/code&gt;为&lt;code&gt;50px&lt;/code&gt;,&lt;code&gt;height&lt;/code&gt;为&lt;code&gt;30px&lt;/code&gt;，并设置了&lt;code&gt;background-color&lt;/code&gt;，这样它的样子就是一条长&lt;code&gt;50px&lt;/code&gt;，高&lt;code&gt;3px&lt;/code&gt;的线。我们再让其&lt;code&gt;left&lt;/code&gt;等于&lt;code&gt;50%&lt;/code&gt;，&lt;code&gt;top&lt;/code&gt;等于&lt;code&gt;35px&lt;/code&gt;，它就会位于其父元素上边框下方35px处，并居中。至此，我们就实现了上图所示的衬线效果。&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h2&gt;让这些圈圈优雅的连起来&lt;/h2&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;下面这张图也是页面上的一个常见情况，一些元素从中间被一条线连起来，像糖葫芦一样这条线在图片的中间。&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;&lt;img src="/images/img_for_before_after/numbers.png" alt="" /&gt;&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;同样，我们可以使用伪元素实现这条线。假设有下面一段代码需要实现上图的样式：&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;```&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;ul&gt;
</span><span class='line'>    &lt;li&gt;
</span><span class='line'>        &lt;h2 class="number first"&gt;1&lt;/h2&gt;
</span><span class='line'>        &lt;div class="description"&gt;
</span><span class='line'>            &lt;i class="fa fa-list-alt fa-7x"&gt;&lt;/i&gt;
</span><span class='line'>            &lt;h2 class="descSummary"&gt;Compare&lt;/h2&gt;
</span><span class='line'>            &lt;p&gt;Magni dolores eoos qui retione voluptatem sequi nesciunt neque porro quisquam est&lt;/p&gt;
</span><span class='line'>        &lt;/div&gt;
</span><span class='line'>    &lt;/li&gt;
</span><span class='line'>    &lt;li&gt;
</span><span class='line'>        &lt;h2 class="number"&gt;2&lt;/h2&gt;
</span><span class='line'>        &lt;div class="description"&gt;
</span><span class='line'>            &lt;i class="fa fa-pencil fa-7x"&gt;&lt;/i&gt;
</span><span class='line'>            &lt;h2&gt;Receive Proposals&lt;/h2&gt;
</span><span class='line'>            &lt;p&gt;Magni dolores eoos qui retione voluptatem sequi nesciunt neque porro quisquam est&lt;/p&gt;
</span><span class='line'>        &lt;/div&gt;
</span><span class='line'>    &lt;/li&gt;
</span><span class='line'>    &lt;li&gt;
</span><span class='line'>        &lt;h2 class="number"&gt;3&lt;/h2&gt;
</span><span class='line'>        &lt;div class="description"&gt;
</span><span class='line'>            &lt;i class="fa fa-users fa-7x"&gt;&lt;/i&gt;
</span><span class='line'>            &lt;h2&gt;Sell with the Best&lt;/h2&gt;
</span><span class='line'>            &lt;p&gt;Magni dolores eoos qui retione voluptatem sequi nesciunt neque porro quisquam est&lt;/p&gt;
</span><span class='line'>        &lt;/div&gt;
</span><span class='line'>    &lt;/li&gt;
</span><span class='line'>&lt;/ul&gt;
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;
</span><span class='line'>我们只关注于数字和其衬线部分的样式：
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;li {
</span><span class='line'>  width: 33.33%;
</span><span class='line'>  float: left;
</span><span class='line'>  position: relative;
</span><span class='line'>  .number {
</span><span class='line'>    border: 2px $border-color solid;
</span><span class='line'>    height: 60px;
</span><span class='line'>    width: 60px;
</span><span class='line'>    margin: auto;
</span><span class='line'>    text-align: center;
</span><span class='line'>    line-height: 60px;
</span><span class='line'>    border-radius: 50%;
</span><span class='line'>    color: $gray-color;
</span><span class='line'>    background-color: $background-color;
</span><span class='line'>  }
</span><span class='line'>  .number::before {
</span><span class='line'>    content: &lsquo;&rsquo;;
</span><span class='line'>    position: absolute;
</span><span class='line'>    top: 30px;
</span><span class='line'>    right: 50%;
</span><span class='line'>    width: 100%;
</span><span class='line'>    height: 2px;
</span><span class='line'>    background: $border-color;
</span><span class='line'>    z-index: -1;
</span><span class='line'>  }
</span><span class='line'>  .first::before {
</span><span class='line'>    display: none;
</span><span class='line'>  }
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure></p>

<p>可以看到，每个<code>li</code>向左浮动，并且宽度为33.33%，这样这三个数字就可以平均分布在页面中的一行。然后为数字元素设置了宽和高都是<code>60px</code>，并让其<code>border-radius</code>为50%，设置边框之后，三个圆圈就实现了。我们设置数字元素的<code>position</code>为<code>relative</code>，其伪元素before的<code>position</code>为<code>absolute</code>，然后设置其<code>top</code>为圆圈半径，<code>right</code>为<code>50%</code>，<code>width</code>为<code>100%</code>，这样我们就成功的在这些圈圈中间画了一条线。但是这样下来，你会发现第一个元素不需要有这条线，而且线有可能跑到圈圈里面。别着急，我们可以让第一个数字的伪元素不显示，并给圆圈设置一个背景色来覆盖其里面多余的线。</p>

<h2>立体的阴影也没有多麻烦</h2>

<p>看到下面这几个图标，很多人想必跟我一样一头雾水，不知其然也不知其所以然。后来经过研究，虽不知其完美的实现方法，但是发现使用伪元素可以实现如图效果。</p>

<p><img src="/images/img_for_before_after/cycle.png" alt="" /></p>

<p>先来看看我的html代码：</p>

<p>```</p>

<ul>
    <li class="like">
        <a href="#" class="icon-heart"></a></li>
    <li class="trash">
        <a href="#" class="icon-trash"></a>
    </li>
    <li class="continue">
        <a href="#" class="icon-play"></a>
    </li>   
    <li class="sync">
        <a href="#" class="icon-arrow-sync"></a>
    </li>
    <li class="fast-forward">
        <a href="#" class="icon-media-fast-forward"></a>
    </li>
</ul>


<pre><code>
假设这些`icon`是我的音乐播放器里面的link，我需要让它们变成上图所示的样子。这里的icon采取[icomoon](https://icomoon.io/)里面的字体。

其样式代码如下:
</code></pre>

<p>ul {
  li {
    display: inline-block;
    width: 10%;
    a {
      position: relative;
      text-decoration: none;
      text-align: center;
      display: block;
      line-height: 60px;
      font-size: 4em;
      width: 60px;
      height: 60px;
      border-radius: 50%;
      color: $ font-gray-color;
      background-color: white;
      @include box-shadow(rgba(black, 0.5)0 0 20 px);
      &amp;::after {
        z-index: -100;
        content: &ldquo;&rdquo;;
        position: absolute;
        width: 80px;
        height: 80px;
        right: -10px;
        top: -10px;
        border-radius: 50%;
        background-color: rgba($ font-gray-color, 0.5);
      }
    }
  }
}</p>

<p>```</p>

<p>通过代码可以看到，我们给<code>a</code>元素设置了一定的宽、高、边框、阴影，并通过<code>after</code>在其下面画一个比它本身的直径大<code>20px</code>的圆，这样二者重叠起来就是一个完美的有阴影的图标。</p>

<p>当然，伪元素的用法远不止这些，我们以后再慢慢研究吧。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CSS VOCABULARY]]></title>
    <link href="http://jiamaoweilie.github.io/blog/2014/08/03/css-vocabulary/"/>
    <updated>2014-08-03T13:34:16+08:00</updated>
    <id>http://jiamaoweilie.github.io/blog/2014/08/03/css-vocabulary</id>
    <content type="html"><![CDATA[<p>CSS词汇是前端开发经常需要用到的东西，但是各种各样的CSS词汇经常令人眼花缭乱。本文主要总结一些CSS词汇的主要功能和用法。</p>

<h2><strong>@import</strong></h2>

<p>它是一种引入CSS的方式，可以在一个CSS文件中引入另一个CSS文件，使用方法如下：</p>

<pre><code class="css">@import url(my.css);
</code></pre>

<h2><strong>Media Queries</strong></h2>

<p>根据字面意思，“Media Queries”就是媒体查询。在CSS中，我们可以设置不同类型的媒体条件，并根据相应的条件，为符合条件的媒体调用与之对应的样式表。它主要用于响应式网页设计（Responsive web Design），该设计可使网站在多种浏览设备上完美显示。</p>

<p>Media Queries的简单用法如下：</p>

<pre><code>@media only screen and (max-width: 700px){
    #content{
        width: 50%;
    }
}
</code></pre>

<p>以上media语句表示，当屏幕的最大宽度小于700px时，#content的宽度就变为原来的50%。这个例子包含了几种概念：</p>

<ul>
<li>媒体类型（Media Type）</li>
</ul>


<p>通过媒体类型可以对不同的设备指定不同的样式，如上例中的screen。<a href="http://www.w3.org/TR/CSS2/media.html#media-types">常见的媒体类型</a>有数十种。</p>

<ul>
<li>媒体特性（Media Features）</li>
</ul>


<p>媒体特性就是媒体类型的特性，如上例中的mix-width，是指屏幕的最大宽度。<a href="http://www.w3.org/TR/css3-mediaqueries/#media1">常见的媒体特性</a>有十三种。</p>

<ul>
<li>关键词（Key Word）</li>
</ul>


<p>关键词有三种：and， not， only。</p>

<p>and用于定义“与”条件，例如：</p>

<pre><code>@media screen (min-width:600px) and (max-width:900px)
</code></pre>

<p>是指屏幕的最小宽度大于600px并且最大宽度小于900px。</p>

<p>not用于排除某种特定的媒体类型，例如：</p>

<pre><code>@media not print and (max-width: 1200px)
</code></pre>

<p>是指排除print这种媒体类型。</p>

<p>only用来指定某种特定的媒体类型，例如：
<code>
@media only screen and (max-device-width:240px)
</code></p>

<p>用来特指screen这种媒体类型。</p>

<h2><strong>CSS选择器</strong></h2>

<p>CSS选择器是CSS中最常用的东西，我们都不会感到陌生。但是它还有一些高端、神奇、不为常人所知的功能，下文将一一介绍。常用的CSS选择器有三种：</p>

<ul>
<li>简单选择器（Simple Selector）</li>
<li>属性选择器（Attribute Selector）</li>
<li>伪类选择器（Pseudo-class Selector）</li>
</ul>


<h3><strong>一. 简单选择器</strong></h3>

<p>简单选择器是CSS世界使用最为广泛的选择器，我将通过一个实例来总结它的用法。实例的代码如下：</p>

<p>```</p>

<div class="demo">
    <ul>
        <li id="first" class="first">1</li>
        <li class="active important">2</li>
        <li class="important items">3</li>
        <li class="important">4</li>
        <li class="items">5</li>
        <li>6</li>
        <li>7</li>
        <li>8</li>
        <li>9</li>
        <li id="last" class="last">10</li>
    </ul>
</div>


<pre><code>
在添加一些样式之后，实例的初步现实如下：

![](http://www.w3cplus.com/sites/default/files/css3-selector-status.png)

####1. 通配符选择器（Universal Selector）（*）

通配符选择器用来选择所有元素，或者某个元素下的所有元素。例如：
</code></pre>

<p>*{
    margin: 0;
    padding: 0;
}
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>表示选择所有元素，并将其margin、padding都设置为0。&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;.demo *{
</span><span class='line'>    border: 1px solid blue;
</span><span class='line'>}
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;表示选择了.demo下的所有所有元素。以上例子的效果图如下：&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;&lt;img src="http://www.w3cplus.com/sites/default/files/css3-selector-tp.png" alt="" /&gt;&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;从图中可以看出，div.demo下所有元素的边框都加上了上面代码中定义的样式。&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h4&gt;2. 元素选择器（Element Selector）（E）&lt;/h4&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;元素就是html页面中的元素，例如本文中的div，ul，li等。元素选择器用来选择这些页面元素。例如：&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;li {
</span><span class='line'>    background-color: grey;
</span><span class='line'>    color: orange;
</span><span class='line'>}
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;这个例子选择html中的li元素，并将其背景色设为grey，前景色设为orange，效果如下：&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;&lt;img src="http://www.w3cplus.com/sites/default/files/css3-selector-e.png" alt="" /&gt;&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h4&gt;3. 类选择器（Class Selector）（.className）&lt;/h4&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;类选择器根据html文档中元素的类名来选择元素，也就是说元素必须有类名才能使用类选择器来选择。上文中的items，important等就是为相应元素添加的类，类选择器可以用来选择这些元素，例如：&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;.important {
</span><span class='line'>    font-weight: bold; 
</span><span class='line'>    color: yellow;
</span><span class='line'>}
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;表示选择类名为important的元素，并将其字体加粗、前景色设为yellow。值得注意的是，类选择器并不仅仅选择类名为important的元素，而是选择类名中包含important的元素，效果图如下：&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;&lt;img src="/images/img_for_css_vocabulary/class.png" alt="" /&gt;&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h4&gt;4. ID选择器（ID Selector）(#ID)&lt;/h4&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;与类选择器类似，ID选择器根据html文档中元素的id来选择元素，例如：&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;#first {
</span><span class='line'>    background: lime;
</span><span class='line'>    color: #000;
</span><span class='line'>}
</span><span class='line'>#last {
</span><span class='line'>    background: #000;
</span><span class='line'>    color: lime;
</span><span class='line'>}
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;上例中，选择id为first的元素，将其背景色设为lime，前景色设为#000；选择id为last的元素，将其背景色设为#000，前景色设为lime，效果如下：&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;&lt;img src="http://www.w3cplus.com/sites/default/files/css-select-id.png" alt="" /&gt;&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h4&gt;5. 后代选择器（Descendant Selector）(E F)&lt;/h4&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;后代选择器也叫包含选择器，它可以选择某元素的后代元素，例如：&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;.demo li {color: blue;}
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;上例中，.demo是祖先元素，li是后代元素。该例子所表达的意思是，选择了.demo的所有后代li元素，不管li与.demo之间是子元素、孙元素或者更深的层级关系，li都会被选中。效果为：&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;&lt;img src="http://www.w3cplus.com/sites/default/files/css3-selector-ef.png" alt="" /&gt;&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h4&gt;6. 子选择器（Child Selector）(E&gt;F)&lt;/h4&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;与后代选择器不同，子元素指选择某元素的子元素。例如：E&gt;F，其中E为父元素，F为子元素，该表达式表示选择E元素下的所有子元素F。&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;ul &gt; li {
</span><span class='line'>    background: green;
</span><span class='line'>    color: yellow;
</span><span class='line'>}
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;这个例子表示，选择ul的所有子元素li，效果图如下：&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;&lt;img src="http://www.w3cplus.com/sites/default/files/css3-selector-chirld.png" alt="" /&gt;&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;如果将上例中的ul改为div则不能选中li元素，因为li不是div的子元素。&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h4&gt;7. 相邻选择器（Adjacent Sibling Selector）(E+F)&lt;/h4&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;相邻选择器可以选择紧接在另一个元素后的元素，而且他们具有相同的父元素。例如：E+F，E元素和F元素具有相同的父元素，且F元素在的后面。&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;li + li {
</span><span class='line'>    background: green;
</span><span class='line'>    color: yellow; 
</span><span class='line'>    border: 1px solid #ccc;
</span><span class='line'>}
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;上例用来选择li之前有个li的元素，效果图如下：&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;&lt;img src="http://www.w3cplus.com/sites/default/files/css-selector-xl.png" alt="" /&gt;&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;从图中可以看出，第一个li元素没有被选中，因为它的前面没有li元素。&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h4&gt;8. 普通兄弟选择器（General Sibling Selector）(E~F)&lt;/h4&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;普通兄弟选择器用来选择元素后面所有的兄弟元素，它们可以不相邻，但必须具有相同的父元素。例如：&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;.active ~ li {
</span><span class='line'>    background: green;
</span><span class='line'>    color: yellow; 
</span><span class='line'>    border: 1px solid #ccc;
</span><span class='line'>}
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;用来选择.active元素后面的所有兄弟元素li，效果如下:&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;&lt;img src="http://www.w3cplus.com/sites/default/files/css3-selector-tongyong.png" alt="" /&gt;&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h4&gt;9. 群组选择器（Group Selector）(selector1,selector2,&hellip;,selectorN)&lt;/h4&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;群组选择器将具有相同样式的元素放在一起，中间以逗号隔开，例如：&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;.first, .last {
</span><span class='line'>    background: green;
</span><span class='line'>    color: yellow; 
</span><span class='line'>    border: 1px solid #ccc;
</span><span class='line'>}
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;用来为.first和.last元素添加一些相同的样式，效果如下:&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;&lt;img src="http://www.w3cplus.com/sites/default/files/css3-selector-group.png" alt="" /&gt;&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h3&gt;&lt;strong&gt;二. 属性选择器&lt;/strong&gt;&lt;/h3&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;属性选择器用来对带有指定属性的html元素设置样式。同样，我将通过一个实例来总结属性选择器的用法，实例的代码如下：&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;```&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;div class="demo clearfix"&gt;
</span><span class='line'>    &lt;a href="http://www.xxx.com" target="_blank" class="links item first" id="first" title="first"&gt;1&lt;/a&gt;
</span><span class='line'>    &lt;a href="" class="links active item" title="test website" target="_blank" lang="zh"&gt;2&lt;/a&gt;
</span><span class='line'>    &lt;a href="sites/file/test.html" class="links item" title="this is a link" lang="zh-cn"&gt;3&lt;/a&gt;
</span><span class='line'>    &lt;a href="sites/file/test.png" class="links item" target="_balnk" lang="zh-tw"&gt;4&lt;/a&gt;
</span><span class='line'>    &lt;a href="sites/file/image.jpg" class="links item" title="zh-cn"&gt;5&lt;/a&gt;
</span><span class='line'>    &lt;a href="mailto:xxx@hotmail" class="links item" title="website link" lang="zh"&gt;6&lt;/a&gt;
</span><span class='line'>    &lt;a href="" class="links item" title="open the website" lang="cn"&gt;7&lt;/a&gt;
</span><span class='line'>    &lt;a href="" class="links item" title="close the website" lang="en-zh"&gt;8&lt;/a&gt;
</span><span class='line'>    &lt;a href="" class="links item" title="http://www.sina.com"&gt;9&lt;/a&gt;
</span><span class='line'>    &lt;a href="" class="links item last" id="last"&gt;10&lt;/a&gt;
</span><span class='line'>&lt;/div&gt;
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;在添加一些样式之后，实例的初步现实如下：
</span><span class='line'>
</span><span class='line'>![](http://www.w3cplus.com/sites/default/files/css3-selector-status.png)
</span><span class='line'>
</span><span class='line'>####1. E[attr]
</span><span class='line'>
</span><span class='line'>E[attr]用来选择具有某种属性的元素，例如：
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;.demo a[id] {
</span><span class='line'>    background: blue;
</span><span class='line'>    color:yellow;
</span><span class='line'>    font-weight:bold;
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>
表示，.demo下所有带id属性的a元素，效果如下：</p>

<p><img src="http://www.w3cplus.com/sites/default/files/css3-selector-attr.png" alt="" /></p>

<h4>2. E[attr = &ldquo;value&rdquo;]</h4>

<p>E[attr = &ldquo;value&rdquo;]用来选择具有某种属性，并且属性的值为“value”的元素，例如：</p>

<pre><code>.demo a[id="first"] {
    background: blue; 
    color:yellow;
    font-weight:bold;
}
</code></pre>

<p>表示，.demo下带有id属性，并且id的值为“first”的元素，效果如下：</p>

<p><img src="http://www.w3cplus.com/sites/default/files/css3-selector-attr2.png" alt="" /></p>

<h4>3. E[attr ~= &ldquo;value&rdquo;]</h4>

<p>E[attr ~= &ldquo;value&rdquo;]根据属性值中的词列表来进行选择，选择属性值中具有“value”这个词的元素，例如：</p>

<pre><code>.demo a[title~="website"]{
    background:orange;
    color:green;
}
</code></pre>

<p>表示，.demo下的a元素的title属性中，只有其属性值包含“website”这个词就会被选择，效果如下：</p>

<p><img src="http://www.w3cplus.com/sites/default/files/css3-selector-attr4.png" alt="" /></p>

<h4>4. E[attr ^= &ldquo;value&rdquo;]</h4>

<p>E[attr ^= &ldquo;value&rdquo;]选择attr属性值以“value”开头的所有元素，例如：</p>

<pre><code>.demo a[href^="http://"]{
    background:orange;
    color:green;
    }
.demo a[href^="mailto:"]{
    background:green;
    color:orange;
}
</code></pre>

<p>表示，选择.demo下具有href属性的a元素，并且href属性的值是以<code>http://</code>和<code>mailto:</code>开头，效果如下：</p>

<p><img src="http://www.w3cplus.com/sites/default/files/css3-selector-attr5.png" alt="" /></p>

<h4>5. E[attr $= &ldquo;value&rdquo;]</h4>

<p>与E[attr ^= &ldquo;value&rdquo;]相反，E[attr $= &ldquo;value&rdquo;]选择attr属性值以“value”结尾的元素，例如：</p>

<pre><code>.demo a[href$="png"]{
    background:orange;
    color:green;
}
</code></pre>

<p>表示，选择.demo下具有href属性的a元素，并且属性href的值以“png”结尾，效果如下：</p>

<p><img src="http://www.w3cplus.com/sites/default/files/css3-selector-attr6.png" alt="" /></p>

<h4>6. E[attr *= &ldquo;value&rdquo;]</h4>

<p>E[attr *= &ldquo;value&rdquo;]选择attr属性值包含子串“value”的所有元素，例如：</p>

<pre><code>.demo a[title*="site"]{
    background:black;
    color:white;
}
</code></pre>

<p>表示，选择.demo下具有title属性的a元素，并且title属性值包含子串“site”，效果如下：</p>

<p><img src="http://www.w3cplus.com/sites/default/files/css3-selector-attr7.png" alt="" /></p>

<h4>7. E[attr |= &ldquo;value&rdquo;]</h4>

<p>E[attr |= &ldquo;value&rdquo;]选择attr属性值等于“value”或以“value-”开头的所有元素，例如：</p>

<pre><code>.demo a[lang|="zh"]{
    background:gray;
    color:yellow;
}
</code></pre>

<p>表示，选择.demo下具有lang属性的a元素，并且属性lang的值为“zh”或以“zh-”开头，效果如下：</p>

<p><img src="http://www.w3cplus.com/sites/default/files/css3-selector-attr8.png" alt="" /></p>

<h3><strong>三. 伪类选择器</strong></h3>

<h4>动态伪类</h4>

<p>动态伪类并不存在与html文档中，只有当用户和网站交互的时候它才能体现出来。动态伪类包含两种：锚点伪类（Anchor Pseudo-Classes）和用户行为伪类（User Action Pseudo-Class）。</p>

<ul>
<li><strong>锚点伪类</strong></li>
</ul>


<p>锚点伪类常用于链接的样式设置，例如：</p>

<pre><code>.demo a:link {color:gray;} 
.demo a:visited{color:yellow;} 
.demo a:hover{color:green;} 
.demo a:active{color:blue;} 
</code></pre>

<p>表示，链接没有被访问时前景色为灰色，链接被访问过后前景色为黄色，鼠标悬浮在链接上时前景色为绿色，鼠标点中激活链接那一下前景色为蓝色。
注意这四个锚点伪类的设置顺序，如果顺序不对会使我们设置的样式不生效。</p>

<ul>
<li><strong>用户行为伪类</strong></li>
</ul>


<p>用户行为伪类用于设置用户和页面交互时的一些样式设置，锚点伪类中的:hover和:active同时又是用户行为伪类。</p>

<ul>
<li>:hover，用于设置当用户把鼠标移动到元素上面时的效果；</li>
<li>:active，用于设置用户点击元素时的效果（动作发生在点击的当时，松开鼠标此动作就会消失）；</li>
<li>:focus，用户设置某元素成为焦点时的样式（例如选择一个输入框）。</li>
</ul>


<h4>UI状态伪类</h4>

<p>常见的UI状态伪类有：</p>

<ul>
<li>:enabled</li>
<li>:disabled</li>
<li>:checked</li>
</ul>


<p>这些伪类主要针对html文档中的Form元素操作，最常见的有"type=&lsquo;text&rsquo;&ldquo;有enabled和disabled两种状态，前者表示可写，后者表示不可写。那么使用UI状态伪类就可以为同一个元素的不同状态设置不同的样式，例如：</p>

<pre><code>input[type="text"]:disabled {border:1px solid #999;background-color: #fefefe;}
</code></pre>

<p>表示，为页面中禁用的文本框设置一个样式。</p>

<h4>:nth选择器</h4>

<p>:nth选择器是伪类选择器中最复杂的一个，我将通过一个实例总结其用法，实例的代码为：</p>

<p>```</p>

<div class="demo clearfix">
    <ul class="clearfix">
        <li class="first odd" id="first"><a href="">1</a></li>
        <li class="even"><a href="">2</a></li>
        <li class="odd"><a href="">3</a></li>
        <li class="even"><a href="">4</a></li>
        <li class="odd"><a href="">5</a></li>
        <li class="even"><a href="">6</a></li>
        <li class="odd"><a href="">7</a></li>
        <li class="even"><a href="">8</a></li>
        <li class="odd"><a href="">9</a></li>
        <li class="even last" id="last"><a href="">10</a></li>
    </ul>
</div>


<pre><code>在添加一些样式之后，实例的初步现实如下：

![](http://www.w3cplus.com/sites/default/files/css3-selector-status.png)

#####1. :first-child() 

:first-child()用来选择某个元素的第一个元素，例如：
</code></pre>

<p>.demo li:first-child {
    background: green;
    border: 1px dotted blue;
}
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>表示，选择.demo的第一个li子元素，并为其加上一些样式，效果如下：&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;&lt;img src="http://www.w3cplus.com/sites/default/files/css3-selector-nth1.png" alt="" /&gt;&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h5&gt;2. :last-child()&lt;/h5&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;顾名思义，:last-child()用来选择某个元素的最后一个子元素，例如：&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;.demo li:last-child {
</span><span class='line'>    background: green; 
</span><span class='line'>    border: 2px dotted blue;
</span><span class='line'>}
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;表示，选择.demo的最后一个li子元素，并为其加上一些样式，效果如下：&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;&lt;img src="http://www.w3cplus.com/sites/default/files/css3-selector-nth2.png" alt="" /&gt;&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h5&gt;3. :nth-child()&lt;/h5&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;:nth-child()可以选择一个元素的某个子元素，例如：&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;.demo li:nth-child(3) {background: lime;}
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;表示.demo的第三个li子元素，效果如下：&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;&lt;img src="http://www.w3cplus.com/sites/default/files/css3-selector-nth3.png" alt="" /&gt;&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;也可以选择某些子元素，有如：&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;.demo li:nth-child(n) {background: lime;}
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;表示，选择.demo下所有的子元素，这里的n是一个从0开始计数的变量，效果如下：&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;&lt;img src="http://www.w3cplus.com/sites/default/files/css3-selector-nth4.png" alt="" /&gt;&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;.demo li:nth-child(-n+5) {background: lime;} 
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;因为n是从0开始计数的，所以以上代码会选择.demo的前5个li子元素。&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;&lt;img src="http://www.w3cplus.com/sites/default/files/css3-selector-nth8.png" alt="" /&gt;&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;:nth-child()的用法还有很多，具体总结如下：&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;:nth-child(length);/*参数是具体数字*/
</span><span class='line'>:nth-child(n);/*参数是n,n从0开始计算*/
</span><span class='line'>:nth-child(n*length)/*n的倍数选择，n从0开始算*/
</span><span class='line'>:nth-child(n+length);/*选择大于length后面的元素*/
</span><span class='line'>:nth-child(-n+length)/*选择小于length前面的元素*/
</span><span class='line'>:nth-child(n*length+1);/*表示隔几选一*/
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;对于:nth-child()有个很好玩，也特别容易出错的例子：&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;```&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;ul&gt;
</span><span class='line'>    &lt;a&gt;link&lt;/a&gt;
</span><span class='line'>    &lt;p&gt;some text&lt;/p&gt;
</span><span class='line'>    &lt;li&gt;apple 1&lt;/li&gt;  /*这一行会被选出*/
</span><span class='line'>    &lt;li&gt;apple 2&lt;/li&gt;
</span><span class='line'>    &lt;li&gt;apple 3&lt;/li&gt;
</span><span class='line'>    &lt;li&gt;apple 4&lt;/li&gt;
</span><span class='line'>    &lt;li&gt;apple 5&lt;/li&gt;
</span><span class='line'>&lt;/ul&gt;
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;对于这段代码，使用CSS选择器：
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;ul li:nth-child(3) {
</span><span class='line'>  color: red;
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>
会选中apple 1那一行。这是因为nth-child()并不是从前面的选择符筛选后的结果中选择第n个。它的定义是，选择在其parent下的第n个子元素。而这个“第n个”的计算，是把它parent下所有的子元素都包括在内的。</p>

<h5>4. :nth-last-child()</h5>

<p>:nth-last-child()与:nth-child()相似，只是它是由最后一个开始元素开始计数的，例如：</p>

<pre><code>.demo li:nth-last-child(4) {background: lime;}
</code></pre>

<p>表示，选择.demo下的倒数第四个li元素，效果如下：</p>

<p><img src="http://www.w3cplus.com/sites/default/files/css3-selector-nth10.png" alt="" /></p>

<h5>5. :empty</h5>

<p>:empty用于设置当元素没有任何内容时的样式。例如，页面中有一个box是用来输出错误信息的，那么当没有错误信息时，我们就可以通过:empty使之不显示。</p>

<h5>6. other nth selector</h5>

<p>:nth选择器还有很多与:nth-child()相类似的其他用法，这里只将它们列举出来，不再一一赘述。</p>

<ul>
<li>:first-of-type</li>
<li>:last-of-type</li>
<li>:nth-of-type</li>
<li>:nth-last-type</li>
<li>:only-child</li>
<li>:only-of-type</li>
</ul>


<h2><strong>伪元素</strong></h2>

<p>所谓伪元素，可以理解为浏览器为某元素附加的元素。常用的伪元素有：</p>

<ul>
<li>::first-line</li>
<li>::first-letter</li>
<li>::before</li>
<li>::after</li>
</ul>


<p>::first-line和::first-letter可以用于方便的为文本添加一些特殊的样式，例如：</p>

<p>```</p>

<div class="line">
    <p>The Coming of Wisdom with Time; <br>
       Though leaves are many, the root is one; <br>
       Through all the lying days of my youth; <br>
       I swayed my leaves and flowers in the sun; <br>
       Now I may wither into the truth.
    </p>
</div>


<pre><code>可以通过伪元素为其添加一些特殊样式：
</code></pre>

<p>p::first-line {
    font-style: italic;
    color: red;
}
p::first-letter {
    font-size: 70px;
    float:left;
    margin-right:3px;
}
```
效果为：</p>

<p><img src="/images/img_for_css_vocabulary/firstline.png" alt="" /></p>

<p>同理，::before和::after用于向元素的前面和后面添加一些特殊样式，它们需要与content属性一起使用：</p>

<pre><code>.css-class:before {
  content: " ";
}
.css-class:after {
  content: " ";
}
</code></pre>

<p>通过伪元素，可以方便的实现一些使用其他方法需要花费很大力气的工作。可以通过<strong><a href="http://icodeit.org/2013/05/before-and-after-selector-in-css/">这里</a></strong>了解它的用法和一些实例.</p>
]]></content>
  </entry>
  
</feed>
